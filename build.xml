<?xml version="1.0" encoding="iso-8859-1"?>
<project name="Javascript Project" default="build" basedir=".">
	
	
	<property file="ant.properties" />
	<property name="lib" value="${base.filepath}/${base.libpath}" />
	
	<property name="src.dir" value="./src" />
	<property name="build.dir" value="./build/${project.version}" />
	<property name="build.host" value="${project.buildhost}" />
	<property name="build.path" value="/build/${project.version}/" />
	
	<property name="tag.path" value="${base.filepath}/tags" />
	<property name="branche.path" value="${base.filepath}/branches" />
	
	
	
	
	
	<tstamp>
        <format property="DSTAMP" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>
			
	<!-- path to the svnant libraries. Usually they will be located in ANT_HOME/lib -->
	  <path id="svnant.classpath">
		<fileset dir="${lib}/svn/">
		  <include name="**/*.jar"/>
		</fileset>
	  </path>  
  
  
  <path id="antcontrib.classpath">
    <fileset dir="${lib}/antcontrib/">
      <include name="**/*.jar"/>
    </fileset>
  </path>  
  
  <path id="jsdoc.classpath">
    <fileset dir="${lib}/jsdoc-toolkit/java/classes/">
     <include name="**/*.jar"/>
    </fileset>
  </path>  

  

 
  <!-- load the svn task -->
  <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />  
  
  <!-- load the GC task -->
  <taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" classpath="${lib}/compiler.jar"/>
  
   <!-- load the JSDOC task -->
   
  <taskdef name="jsdoctoolkit" classname="uk.co.darrenhurley.ant.tasks.JsDocToolkit" classpath="${lib}/jsdoc-toolkit/java/classes/jsdoc-toolkit-ant-task-1.1.2.jar;${lib}/jsdoc-toolkit/java/classes/js.jar"/>

   <target name="doc" >       
		<jsdoctoolkit encoding="utf-8" jsdochome="${lib}/jsdoc-toolkit/" template="jsdoc" outputdir="${build.dir}/docs/" inputdir="${src.dir}/js/" />
   </target>
   
   
   

	
	<target name="build" depends="images,html,css,js">       
		<echo message="build complete" />
   </target>
   
	  
   
	<!-- image -->
	 <target name="images" >
	    <echo message="copy images..." />
		<mkdir dir="${build.dir}/images/" />
		<copy todir="${build.dir}/images/" >
		    <fileset dir="${src.dir}/images/">
			     <include name="**/*.jpg"/>
				 <include name="**/*.gif"/>
				 <include name="**/*.png"/>
			</fileset>
		</copy>		
    </target>
    
    <!-- image -->
	 <target name="xml" >
	    <echo message="copy xml..." />
		<mkdir dir="${build.dir}/xml/" />
		<copy todir="${build.dir}/xml/" >
		    <fileset dir="${src.dir}/xml/">
			     <include name="**/*.xml"/>
			</fileset>
		</copy>		
    </target>
    
    <target name="swf" >
	    <echo message="copy swf..." />
		<mkdir dir="${build.dir}/swf/" />
		<copy todir="${build.dir}/swf/" >
		    <fileset dir="${src.dir}/swf/">
			     <include name="**/*.swf"/>
			</fileset>
		</copy>		
    </target>
   
   <!-- HTML -->
   <target name="html" >
	    <echo message="copy html..." />
		<mkdir dir="${build.dir}/html/" />
		<copy todir="${build.dir}/html/" >
		    <fileset dir="${src.dir}/html">
			     <include name="**/*.html"/>
				 <include name="**/*.shtml"/>
			</fileset>
		</copy>			
		
		<replaceregexp match="http://img\.autostreetscdn\.com" replace="${build.host}" flags="g" byline="true" encoding="utf-8">		
		   <fileset dir="${build.dir}/html">
			     <include name="**/*.html"/>
				 <include name="**/*.shtml"/>
			</fileset>
		</replaceregexp>
		
		<replaceregexp match="/src/" replace="${build.path}" flags="g" byline="true" encoding="utf-8">		
		   <fileset dir="${build.dir}/html">
			     <include name="**/*.html"/>
				 <include name="**/*.shtml"/>
			</fileset>
		</replaceregexp>
    </target>
	
	
	  
   <taskdef resource="net/sf/antcontrib/antlib.xml"  classpathref="antcontrib.classpath" />
   <target name="test">	
	<echo message="The first five letters of the alphabet are:"/>
	<for list="a,b,c,d,e" param="letter">
	  <sequential>
		<echo>Letter @{letter}</echo>
	  </sequential>
	</for>
   </target>
   
   
   
	
	
	 <!-- CSS -->
	<target name="css" >	
	    <echo message="copy css..." />
		<echo message="${DSTAMP}" />
		
		
		<mkdir dir="${build.dir}/css/" />
		<copy todir="${build.dir}/css/" overwrite="true">
		    <fileset dir="${src.dir}/css/">
			     <include name="**/*.css"/>
			</fileset>
		</copy>			
		
		
		<echo message="concat css..." />					
		<!--concat destfile="${build.dir}/css/b.css">
		  <filelist dir="${build.dir}/css/" files="screen.css,common.css"/>	
        </concat-->

		<echo message="compress CSS..." />	
		<echo message="${build.dir}/css/" />	
		<apply executable="java" parallel="false" failonerror="true" dest="${build.dir}/css/" verbose="true">		        
			<fileset dir="${build.dir}/css/" includes="**/*.css" excludes="b.css" />
			<arg line="-jar" />			
			<arg path="${lib}/yuicompressor-2.4.2.jar" />
			<srcfile/>
			<arg line="--type css" />	
			<arg line="--charset utf-8" />	
			<arg line="-v" />	
			<arg line="-o" />	
			<targetfile/>
			<mapper type="glob"  from="*.css" to="*-min.css"  />    
		</apply>		
		<move todir="${build.dir}/css/" overwrite="true">
			<fileset dir="${build.dir}/css/" />
			<mapper type="glob" from="*-min.css" to="*.css"/>
		</move>	
		
		<replaceregexp match="http://img\.autostreetscdn\.com/${project.appname}/src/" replace="${build.host}/${project.appname}${build.path}" flags="g" byline="true" encoding="utf-8">		
		   <fileset dir="${build.dir}/css/" includes="**/*.css"/>
		</replaceregexp>

		<replaceregexp match="@Date" replace="${DSTAMP}" flags="g" byline="true" encoding="utf-8">
		   <fileset dir="${build.dir}/css/" includes="**/*.css"/>
		</replaceregexp>
		
		
        <echo message="cssmark start..." />
		<apply executable="java" parallel="false" failonerror="true" dest="${build.dir}/css/" verbose="true">		        
			<fileset dir="${build.dir}/css/" includes="**/*.css" />
			<arg line="-jar" />			
			<arg path="${lib}/fed.jar" />
			<srcfile/>
			<arg line="--author '${svn.user}@autostreets.com'" />
			<arg line="--date '${DSTAMP}'" />
			<arg line="--version '${project.version}'" />	
			<arg line="--location 'before'" />	
			<mapper type="glob"  from="*.css" to="*-mark.css"  />    	
		</apply>		
		 <echo message="cssmark end" />
		 
    </target>
	
	
	 <!-- JS-->
	
	<target name="js" >
	    <echo message="copy JS..." />		
	
		<mkdir dir="${build.dir}/js/" />
		<copy todir="${build.dir}/js/" overwrite="true">
		    <fileset dir="${src.dir}/js/">
			     <include name="**/*.js"/>
			</fileset>
		</copy>	
		
	    <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/competitive_detail_info.js">  
			<sources dir="${build.dir}/js">
				<file name="competitive_detail_info.js"/>				
            </sources>
         </jscomp>
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/competitive_detail.js">  
			<sources dir="${build.dir}/js">
				<file name="competitive_detail.js"/>				
            </sources>
         </jscomp>
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/competitive.js">  
			<sources dir="${build.dir}/js">
				<file name="competitive.js"/>				
            </sources>
         </jscomp>
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/halfoff.js">  
			<sources dir="${build.dir}/js">
				<file name="halfoff.js"/>				
            </sources>
         </jscomp>
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/services.js">  
			<sources dir="${build.dir}/js">
				<file name="services.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/lib/touch.js">  
			<sources dir="${build.dir}/js">
				<file name="/lib/touch.js"/>				
            </sources>
         </jscomp>
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/lib/zepto.js">  
			<sources dir="${build.dir}/js">
				<file name="/lib/zepto.js"/>				
            </sources>
         </jscomp>
		 
		 <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/lib/fx.js">  
			<sources dir="${build.dir}/js">
				<file name="/lib/fx.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/online.js">  
			<sources dir="${build.dir}/js">
				<file name="online.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/online_detail.js">  
			<sources dir="${build.dir}/js">
				<file name="online_detail.js"/>				
            </sources>
         </jscomp>
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/validate.js">  
			<sources dir="${build.dir}/js">
				<file name="validate.js"/>				
            </sources>
         </jscomp>
         
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/auction.js">  
			<sources dir="${build.dir}/js">
				<file name="auction.js"/>				
            </sources>
         </jscomp>
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/bidded.js">  
			<sources dir="${build.dir}/js">
				<file name="bidded.js"/>				
            </sources>
         </jscomp>
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/charge_detail.js">  
			<sources dir="${build.dir}/js">
				<file name="charge_detail.js"/>				
            </sources>
         </jscomp>
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/favorites.js">  
			<sources dir="${build.dir}/js">
				<file name="favorites.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/online_detail.js">  
			<sources dir="${build.dir}/js">
				<file name="online_detail.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/online.js">  
			<sources dir="${build.dir}/js">
				<file name="online.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/userinfo.js">  
			<sources dir="${build.dir}/js">
				<file name="userinfo.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/live_room.js">  
			<sources dir="${build.dir}/js">
				<file name="live_room.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/sync.js">  
			<sources dir="${build.dir}/js">
				<file name="sync.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/sync_info.js">  
			<sources dir="${build.dir}/js">
				<file name="sync_info.js"/>				
            </sources>
         </jscomp>
         
         <jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/sync_auction_detail.js">  
			<sources dir="${build.dir}/js">
				<file name="sync_auction_detail.js"/>				
            </sources>
         </jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/activity.js">
			<sources dir="${build.dir}/js">
				<file name="activity.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/activity_list.js">
			<sources dir="${build.dir}/js">
				<file name="activity_list.js"/>
			</sources>
		</jscomp>
		
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/bi.js">
			<sources dir="${build.dir}/js">
				<file name="bi.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/common.js">
			<sources dir="${build.dir}/js">
				<file name="common.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/config.js">
			<sources dir="${build.dir}/js">
				<file name="config.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/define.history.js">
			<sources dir="${build.dir}/js">
				<file name="define.history.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/main.js">
			<sources dir="${build.dir}/js">
				<file name="main.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/require.js">
			<sources dir="${build.dir}/js">
				<file name="require.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/index.js">
			<sources dir="${build.dir}/js">
				<file name="index.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/new_mall.js">
			<sources dir="${build.dir}/js">
				<file name="new_mall.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/about.js">
			<sources dir="${build.dir}/js">
				<file name="about.js"/>
			</sources>
		</jscomp>

		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/car_news.js">
			<sources dir="${build.dir}/js">
				<file name="car_news.js"/>
			</sources>
		</jscomp>

		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/usermain.js">
			<sources dir="${build.dir}/js">
				<file name="usermain.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/bm_common.js">
			<sources dir="${build.dir}/js">
				<file name="bm_common.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/bm.js">
			<sources dir="${build.dir}/js">
				<file name="bm.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/bm_2.js">
			<sources dir="${build.dir}/js">
				<file name="bm_2.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/calendar3.js">
			<sources dir="${build.dir}/js">
				<file name="calendar3.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/half_off_activity.js">
			<sources dir="${build.dir}/js">
				<file name="half_off_activity.js"/>
			</sources>
		</jscomp>

		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/write_off.js">
			<sources dir="${build.dir}/js">
				<file name="write_off.js"/>
			</sources>
		</jscomp>

		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/iscroll.js">
			<sources dir="${build.dir}/js">
				<file name="iscroll.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/iscroll2.0.js">
			<sources dir="${build.dir}/js">
				<file name="iscroll2.0.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/maintain.js">
			<sources dir="${build.dir}/js">
				<file name="maintain.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/confirm.js">
			<sources dir="${build.dir}/js">
				<file name="confirm.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple"  debug="true"  output="${build.dir}/js/lib/fastClick.js">
			<sources dir="${build.dir}/js/lib">
				<file name="fastClick.js"/>
			</sources>
		</jscomp>

		
		
		 <echo message="jsmark start..." />
		<apply executable="java" parallel="false" failonerror="true" dest="${build.dir}/js/" verbose="true">		        
			<fileset dir="${build.dir}/js/" includes="**/*.js" />
			<arg line="-jar" />			
			<arg path="${lib}/fed.jar" />
			<srcfile/>
			<arg line="--author '${svn.user}@autostreets.com'" />
			<arg line="--date '${DSTAMP}'" />
			<arg line="--version '${project.version}'" />	
			<arg line="--location 'before'" />				
			<mapper type="glob"  from="*.js" to="*-mark.js"  />    	
		</apply>		
		 <echo message="jsmark end" />
		 
    </target>

	
	

	<target name="commit">
	   
		<svn  username="${svn.user}" password="${svn.pwd}" >  
		  <add dir="${build.dir}"  force="true" /> 	
		  <commit dir="${build.dir}" message="build commit" />
		</svn>

	</target>
   
   
   	<available property="project.exist"  file=".svn" filepath="${base.filepath}/tags/${project.appname}/"/>
	<available property="build.exist"  file=".svn" filepath="${base.filepath}/tags/${project.appname}/build/"/>
	<available property="src.exist"  file=".svn" filepath="${base.filepath}/tags/${project.appname}/src/"/>
	 
	<available property="build.version.exist"  file=".svn" filepath="${base.filepath}/tags/${project.appname}/build/${project.version}/"/>
	<!--
    <available property="src.version.exist"  file=".svn" filepath="${base.filepath}/tags/${project.appname}/src/${project.version}/"/>
    -->
	
	
	
	<target name="tag" >
	   	<!-- cofirm project exist-->	
		
		<if>
		      <isset property="project.exist"/>
			  <then> 
			    <echo>update ${tag.path}</echo>
			    <svn  username="${svn.user}" password="${svn.pwd}" > 		    
					<update dir="${tag.path}/${project.appname}/" />		
				</svn>		 
			  </then>
			  <else>
				<echo>create  project path in tags</echo>
			
					<echo>tag not exist, update ${base.filepath}/tags/</echo>
					<svn  username="${svn.user}" password="${svn.pwd}" > 
						<update dir="${tag.path}/${project.appname}/" />		
					</svn>				
				
					<if>
						<isset property="project.exist"/>
						<then>
						    <echo>update ${tag.path}/${project.appname}/  ok!</echo>
						    <!--
							<svn  username="${svn.user}" password="${svn.pwd}" > 							  	
							  <update dir="${tag.path}/${project.appname}/" />	
							</svn>	
							
							-->
					   </then>
					   <else>
					        
							<svn  username="${svn.user}" password="${svn.pwd}" > 
							  <mkdir path="${tag.path}/${project.appname}/" />	
							  <update dir="${tag.path}/${project.appname}/" />	
							</svn>	
							<echo>create ${tag.path}/${project.appname}/  ok!</echo>
					   </else>
					</if>
				
			  </else>
		 </if>
		 
		 
		
	   <echo>start copy  build from trunk to tag</echo>     
	  
	 
	   <copy todir="${tag.path}/${project.appname}/build/${project.version}/"  >		   
			<fileset dir="${build.dir}/">
			    <include name="**/*.js"/>
			    <include name="**/*.css"/>
				<include name="**/*.html"/>
				<include name="**/*.shtml"/>
				<include name="**/*.htm"/>
				<include name="**/*.txt"/>				
				<include name="**/*.jpg"/>
				<include name="**/*.gif"/>
				<include name="**/*.png"/>
			    <exclude name="**/*.svn"/>						
			</fileset>
		</copy>		
		
		 <!--
		<echo>start copy  src from trunk to tag</echo> 	
	    <copy todir="${tag.path}/${project.appname}/src/${project.version}/"  >		   
			<fileset dir="${src.dir}/">
			    <include name="**/*.js"/>
			    <include name="**/*.css"/>
				<include name="**/*.html"/>
				<include name="**/*.shtml"/>
				<include name="**/*.htm"/>
				<include name="**/*.txt"/>				
				<include name="**/*.jpg"/>
				<include name="**/*.gif"/>
				<include name="**/*.png"/>
			    <exclude name="**/*.svn"/>						
			</fileset>
		</copy>	
		-->	
		
		<svn  username="${svn.user}" password="${svn.pwd}" >  
		  <add dir="${tag.path}/${project.appname}/"  force="true" /> 	
		  <commit dir="${tag.path}/${project.appname}/" message="build commit" />
		</svn>				
		<echo message="tag  end" />			 
		 
	</target>
	
	
	

	<property name="project.code" value="${name}" />
    

	
	


</project>